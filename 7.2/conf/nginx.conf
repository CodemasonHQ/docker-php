user www-data;
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 768;
    # multi_accept on;
}


http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;


    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;


    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;


    ##
    # Forward Real IP and Proto
    ##

    real_ip_recursive on;
    real_ip_header X-Forwarded-For;
    set_real_ip_from 10.0.0.0/8;

    map $http_x_forwarded_proto $fastcgi_https {
        default off;
        https on;
    }


    ##
    # Default Server
    ##

    server {

        server_name localhost;

        listen 80 default_server;
        listen [::]:80 default_server ipv6only=on;

        root @{{DOCUMENT_ROOT}};
        index index.php index.html index.htm;

        location / {

            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            try_files   $uri   $uri/   /index.php$is_args$args;

        }

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location ~ \.php$ {

            fastcgi_index index.php;
            fastcgi_pass unix:/var/run/php7.1-fpm.sock;

            # regex to split $uri to $fastcgi_script_name and $fastcgi_path
            fastcgi_split_path_info ^(.+\.php)(/.+)$;

            # Check that the PHP script exists before passing it
            try_files $fastcgi_script_name =404;

            # Bypass the fact that try_files resets $fastcgi_path_info
            # see: http://trac.nginx.org/nginx/ticket/321
            set $path_info $fastcgi_path_info;
            fastcgi_param PATH_INFO $path_info;
            fastcgi_param HTTPS $fastcgi_https;

            include fastcgi.conf;

        }

        location ~ /\. {
            log_not_found off;
            deny all;
        }

    }

}